<?php
/**
 * @file
 * Install schema and variables for Order System module.
 */

/**
 * Implements hook_schema().
 */
function order_system_schema() {
  $schema = array();

  // Formate order item table schema.
  $schema['order_system_order_item'] = array(
    'description' => 'Stores all order items.',
    'fields' => array(
      'oiid' => array(
        'description' => t('The primary identifier for an order item.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'oid' => array(
        'description' => 'Foreign key order id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'The node id which was ordered as a product.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'amount' => array(
        'description' => 'The ordered amount of current product.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('oiid'),
  );

  // Formate orders table schema.
  $schema['order_system_orders'] = array(
    'description' => 'Stores all registered orders.',
    'fields' => array(
      'oid' => array(
        'description' => t('The primary identifier for an order.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Order created timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'Order updated timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'placed' => array(
        'description' => 'Order placed timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'uid' => array(
        'description' => 'The user id who placed the order.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'email_notified' => array(
        'description' => 'A boolean indicating that email notification was sent or not.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'order_state' => array(
        'description' => 'A boolean indicating order state.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ),
    ),
    'primary key' => array('oid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function order_system_install() {
  global $user;

  // Prepare mail body
  $mail_body =
    'Dear !username, <br />' .
    'Thank you for placing your order on !sitename.<br />' .
    'This email is to confirm your recent order.<br />' .
    'Placed date: !date.<br />' .
    '-- !sitename Team --';

  // Prepare mail notification template which includes subject and body.
  $mail_notification_template = array(
    'subject' => '!from order notification',
    'body' => $mail_body,
    'notify' => 1,
  );

  // Order system mail notification template.
  variable_set('order_system_mail_notification_template', $mail_notification_template);

  // Content types which are set as products.
  variable_set('order_system_content_types', array());
}

/**
 * Implements hook_uninstall().
 */
function order_system_uninstall() {
  // Remove module variables after uninstall it.
  variable_del('order_system_mail_notification_template');
  variable_del('order_system_content_types');
}
